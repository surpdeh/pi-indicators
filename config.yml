---
pi-indicator-config: 

  # Sources collect and mediate input events
  # Only currently supported source type is Slack
  sources:
    nbntechlabs:
      type: slack
      apikey: <apikey>
      username: pi-indicators
    
  # Dispatcherse transform source events into intermediate events
  # intermediate are labelled with an "event" but also carry the
  # original message, and can be routed to a named destination sink
  dispatchers:
    Git:
    # 415d9863: save Cu data to parquet files
    # - michaeljoyce
      regex: "pushed to branch.*https://git"
      destination: GitCommitPixels
      event: push

    EMR:
      regex: "A new EMR"
      destination: EMRPixels
      event: new

  # Sinks receive all events - source and intermediate 
  # Only supported type is currently neopixel
  sinks:
    shield:
      type: neopixel
      config:
        LED_COUNT: 32 # Number of LED pixels.
        LED_PIN: 18 # GPIO pin connected to the pixels (must support PWM!).
        LED_FREQ_HZ: 800000 # LED signal frequency in hertz (usually 800khz)
        LED_DMA: 5 # DMA channel to use for generating signal (try 5)
        LED_BRIGHTNESS: 10 # Set to 0 for darkest and 255 for brightest
        LED_INVERT: False 
      sink:
        GitPixels:
          LEDS: 1,8,16,24
          PatternMap:
            'push': theaterChaseRainbow
        EMRPixels:
          LEDS, 2,9,17,25
          PatternMap:
            'new': theaterChaseRainbow
            'fail': alarm
        OtherPixels:
          LEDS: 3-7,10-15,18-23,26-32
        EntireShield:
          LEDS: 1-32
          regex: Play pattern (\d+)
          PatternMap:
            '1': Blink
            '2': theaterChase
            '3': colorWipe
            '4': rainbow
            '5': rainbowCycle
            '6': theaterChaseRainbow
            '7': alarm

